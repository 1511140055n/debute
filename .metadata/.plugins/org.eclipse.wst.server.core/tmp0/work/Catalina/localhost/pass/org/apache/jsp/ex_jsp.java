/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.26
 * Generated at: 2017-07-28 07:01:52 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import java.io.*;
import java.util.regex.*;
import java.util.Date;
import java.text.SimpleDateFormat;

public final class ex_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");


request.setCharacterEncoding("UTF-8");
String item = request.getParameter("item");
String price = request.getParameter("price");
String num = request.getParameter("num");
String btn = request.getParameter("btn");
String id = request.getParameter("id");
String s = request.getParameter("s");
//登録

if ("登録".equals(btn)) {
	if("".equals(item) ||"".equals(price) ||"".equals(num)){
		out.println("空欄を埋めてください");
		return;
	}
	Pattern pattern = Pattern.compile("^\\d{1,10}");
	Matcher matcher =pattern.matcher(price);
	boolean a = matcher.matches();
	Matcher matcher2 =pattern.matcher(num);
	boolean b = matcher2.matches();
	if(a == false || b == false){
		out.println("数字を入力してください<br>");
		return;
	}
	Class.forName("org.apache.derby.jdbc.ClientDriver");
	Connection con = DriverManager.getConnection("jdbc:derby://localhost:1527/sample;create=true", "user", "pass");
	String sql = "INSERT INTO ORDERITEM (ITEM, PRICE, NUM) VALUES (?,?,?)";
	PreparedStatement stmt = con.prepareStatement(sql);
	stmt.setString(1,item);
	stmt.setString(2,price);
	stmt.setString(3,num);
	stmt.executeUpdate();
	stmt.close();
	con.close();
} else if ("削除".equals(btn)) {
	Class.forName("org.apache.derby.jdbc.ClientDriver");
	Connection con = DriverManager.getConnection("jdbc:derby://localhost:1527/sample;create=true", "user", "pass");
	String sql = "DELETE FROM ORDERITEM WHERE ID = ?";
	PreparedStatement stmt = con.prepareStatement(sql);
	stmt.setInt(1, Integer.parseInt(id));
	stmt.executeUpdate();
	stmt.close();
	con.close();
} else if ("編集".equals(btn)) {
	Class.forName("org.apache.derby.jdbc.ClientDriver");
	Connection con = DriverManager.getConnection("jdbc:derby://localhost:1527/sample;create=true", "user", "pass");
	String sql = "SELECT * FROM ORDERITEM WHERE ID = ?";
	PreparedStatement stmt = con.prepareStatement(sql);
	stmt.setInt(1, Integer.parseInt(id));
	ResultSet rest = stmt.executeQuery();
	while(rest.next())
	{
		int id_ = rest.getInt("ID");
	    String item_ = rest.getString("ITEM");
	    int price_ = rest.getInt("PRICE");
	    int num_ = rest.getInt("NUM");
	
      out.write("\r\n");
      out.write("\t<form action=\"ex.jsp\" method=\"post\">\r\n");
      out.write("\t\t<input type=\"text\" name=\"item\" value=\"");
      out.print( item_ );
      out.write("\"/>\r\n");
      out.write("\t\t<input type=\"text\" name=\"price\" value=\"");
      out.print(price_ );
      out.write("\"/>\r\n");
      out.write("\t\t<input type=\"text\" name=\"num\" value=\"");
      out.print(num_ );
      out.write("\"/>\r\n");
      out.write("\t\t<input type=\"hidden\" name=\"id\" value=\"");
      out.print(id_ );
      out.write("\"/>\r\n");
      out.write("\t\t<input type=\"submit\" name=\"btn\" value=\"更新\"/>\r\n");
      out.write("\t</form>\r\n");
      out.write("\t");

	}
	return;
} else if ("更新".equals(btn)) {
	Class.forName("org.apache.derby.jdbc.ClientDriver");
	Connection con = DriverManager.getConnection("jdbc:derby://localhost:1527/sample;create=true", "user", "pass");
	String sql = "UPDATE ORDERITEM SET ITEM = \'"+item+"\',PRICE = "+Integer.parseInt(price)+",NUM = "+Integer.parseInt(num)+" WHERE ID = "+Integer.parseInt(id);
	PreparedStatement stmt = con.prepareStatement(sql);
	stmt.executeUpdate();
	stmt.close();
	con.close();
}else if ("検索".equals(btn)){
	Class.forName("org.apache.derby.jdbc.ClientDriver");
	Connection con = DriverManager.getConnection("jdbc:derby://localhost:1527/sample;create=true", "user", "pass");
	String sql = "SELECT * FROM ORDERITEM WHERE ID = "+Integer.parseInt(s);
	PreparedStatement stmt = con.prepareStatement(sql);
	stmt = con.prepareStatement(sql);
	ResultSet rest = stmt.executeQuery();
	while(rest.next())
	{
	    int id_ = rest.getInt("ID");
	    String item_ = rest.getString("ITEM");
	    String price_ = rest.getString("PRICE");
	    String num_ = rest.getString("NUM");
	
      out.write("\r\n");
      out.write("\t<form action= \"ex.jsp\" method=\"post\">\r\n");
      out.write("\t\t<p>");
      out.print( id_ );
      out.write(".&nbsp;商品名:");
      out.print( item_ );
      out.write("&nbsp;単価：");
      out.print( price_ );
      out.write("&nbsp;数量：");
      out.print( num_ );
      out.write("<br>\r\n");
      out.write("\t\t</p>\r\n");
      out.write("\t\t<input type=\"submit\" name=\"btn\" value=\"戻る\">\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t");

	return;
	}
	rest.close();
	stmt.close();
	con.close();
}else if ("初期化".equals(btn)) {
	Class.forName("org.apache.derby.jdbc.ClientDriver");
	Connection con = DriverManager.getConnection("jdbc:derby://localhost:1527/sample;create=true", "user", "pass");
	String sql = "DROP TABLE ORDERITEM";
	PreparedStatement stmt = con.prepareStatement(sql);
	stmt = con.prepareStatement(sql);
	stmt.executeUpdate();
	sql = "CREATE TABLE ORDERITEM(ID INT PRIMARY KEY NOT NULL GENERATED ALWAYS AS IDENTITY,ITEM VARCHAR(50) NOT NULL,PRICE INT,NUM INT)";
	stmt = con.prepareStatement(sql);
	stmt.executeUpdate();
	stmt.close();
	con.close();
}
//表示
Class.forName("org.apache.derby.jdbc.ClientDriver");
Connection con = DriverManager.getConnection("jdbc:derby://localhost:1527/sample;create=true", "user", "pass");
String sql = "SELECT * FROM ORDERITEM";
PreparedStatement stmt = con.prepareStatement(sql);
sql = "SELECT * FROM ORDERITEM ORDER BY ID DESC";
stmt = con.prepareStatement(sql);
ResultSet rest = stmt.executeQuery();
while(rest.next())
{
    int id_ = rest.getInt("ID");
    String item_ = rest.getString("ITEM");
    String price_ = rest.getString("PRICE");
    String num_ = rest.getString("NUM");

      out.write("\r\n");
      out.write("<form action= \"ex.jsp\" method=\"post\">\r\n");
      out.write("\t<p>");
      out.print( id_ );
      out.write(".&nbsp;商品名:");
      out.print( item_ );
      out.write("&nbsp;単価：");
      out.print( price_ );
      out.write("&nbsp;数量：");
      out.print( num_ );
      out.write("<br>\r\n");
      out.write("\t<input type=\"submit\" name=\"btn\" value=\"削除\"/>\r\n");
      out.write("\t<input type=\"submit\" name=\"btn\" value=\"編集\"/>\r\n");
      out.write("\t<input type=\"hidden\" name=\"id\" value=\"");
      out.print(id_ );
      out.write("\"/>\r\n");
      out.write("\t</p>\r\n");
      out.write("\t</form>\r\n");

}
rest.close();
stmt.close();
con.close();

      out.write("\r\n");
      out.write("<form action= \"ex.jsp\" method=\"post\">\r\n");
      out.write("商品名:<input type=\"text\" name=\"item\"><br/>\r\n");
      out.write("単価：<input type=\"text\" name=\"price\"><br/>\r\n");
      out.write("数量：<input type=\"text\" name=\"num\"><br/>\r\n");
      out.write("<input type=\"submit\" name=\"btn\" value=\"登録\"><input type=\"submit\" name=\"btn\" value=\"初期化\"><br/><br/>\r\n");
      out.write("IDから検索：<input type=\"text\" name=\"s\"><input type=\"submit\" name=\"btn\" value=\"検索\"><br/>\r\n");
      out.write("<br/>\r\n");
      out.write("</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
